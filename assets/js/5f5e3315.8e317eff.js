"use strict";(self.webpackChunkdso_dev_blog=self.webpackChunkdso_dev_blog||[]).push([[824],{1030:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=s(4848),t=s(8453);const r={},a="Signs for Trucks",o={id:"projects/truck-signs-api/overview",title:"overview",description:"Truck Signs",source:"@site/docs/projects/truck-signs-api/00-overview.md",sourceDirName:"projects/truck-signs-api",slug:"/projects/truck-signs-api/overview",permalink:"/devsecops-blog/docs/projects/truck-signs-api/overview",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Projects Intro",permalink:"/devsecops-blog/docs/projects/intro"},next:{title:"Baby Tools Shop",permalink:"/devsecops-blog/docs/projects/baby-tools-shop/overview"}},l={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Description",id:"description",level:2},{value:"Settings",id:"settings",level:3},{value:"Models",id:"models",level:3},{value:"Brief Explanation of the Views",id:"brief-explanation-of-the-views",level:3},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Screenshots of the Django Backend Admin Panel",id:"screenshots-of-the-django-backend-admin-panel",level:2},{value:"Mobile View",id:"mobile-view",level:3},{value:"Desktop View",id:"desktop-view",level:3},{value:"Useful Links",id:"useful-links",level:2},{value:"Postgresql Database",id:"postgresql-database",level:3},{value:"Docker",id:"docker",level:3},{value:"Django and DRF",id:"django-and-drf",level:3},{value:"Miscellaneous",id:"miscellaneous",level:3},{value:"Contact",id:"contact",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("div",{align:"center",children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Truck Signs",src:s(6389).A+"",width:"192",height:"192"})}),(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"signs-for-trucks",children:"Signs for Trucks"})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/Pythn-3.8.10-4c566a?logo=python&&longCache=true&logoColor=white&colorB=pink&style=flat-square&colorA=4c566a",alt:"Python version"})," ",(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/Django-2.2.8-4c566a?logo=django&&longCache=truelogoColor=white&colorB=pink&style=flat-square&colorA=4c566a",alt:"Django version"})," ",(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/Django_Rest_Framework-3.12.4-red.svg?longCache=true&style=flat-square&logo=django&logoColor=white&colorA=4c566a&colorB=pink",alt:"Django-RestFramework"})]})]}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#description",children:"Description"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#usage",children:"Usage"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#screenshots",children:"Screenshots of the Django Backend Admin Panel"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#useful_links",children:"Useful Links"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Signs for Trucks"})," is an online store to buy pre-designed vinyls with custom lines of letters (often call truck letterings). The store also allows clients to upload their own designs and to customize them on the website as well. Aside from the vinyls that are the main product of the store, clients can also purchase simple lettering vinyls with no truck logo, a fire extinguisher vinyl, and/or a vinyl with only the truck unit number (or another number selected by the client)."]}),"\n",(0,i.jsx)(n.h3,{id:"settings",children:"Settings"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"settings"})," folder inside the trucks_signs_designs folder contains the different setting's configuration for each environment (so far the environments are development, docker testing, and production). Those files are extensions of the base.py file which contains the basic configuration shared among the different environments (for example, the value of the template directory location). In addition, the .env file inside this folder has the environment variables that are mostly sensitive information and should always be configured before use. By default, the environment in use is the decker testing. To change between environments modify the __init.py__ file."]}),"\n",(0,i.jsx)(n.h3,{id:"models",children:"Models"}),"\n",(0,i.jsx)(n.p,{children:"Most of the models do what can be inferred from their name. The following dots are notes about some of the models to make clearer their propose:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category Model:"})," The category of the vinyls in the store. It contains the title of the category as well as the basic properties shared among products that belong to a same category. For example, ",(0,i.jsx)(n.em,{children:"Truck Logo"})," is a category for all vinyls that has a logo of a truck plus some lines of letterings (note that the vinyls are instances of the model ",(0,i.jsx)(n.em,{children:"Product"}),"). Another category is ",(0,i.jsx)(n.em,{children:"Fire Extinguisher"}),", that is for all vinyls that has a logo of a fire extinguisher."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lettering Item Category:"})," This is the category of the lettering, for example: ",(0,i.jsx)(n.em,{children:"Company Name"}),", ",(0,i.jsx)(n.em,{children:"VIM NUMBER"}),", ... Each has a different pricing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lettering Item Variations:"})," This contains a foreign key to the ",(0,i.jsx)(n.strong,{children:"Lettering Item Category"})," and the text added by the client."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Product Variation:"})," This model has the original product as a foreign key, plus the lettering lines (instances of the ",(0,i.jsx)(n.strong,{children:"Lettering Item Variations"})," model) added by the client."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Order:"})," Contains the cart (in this case the cart is just a vinyl as only one product can be purchased each time). It also contains the contact and shipping information of the client."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payment:"})," It has the payment information such as the time of the purchase and the client id in Stripe."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To manage the payments, the payment gateway in use is ",(0,i.jsx)(n.a,{href:"https://stripe.com/",children:"Stripe"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"brief-explanation-of-the-views",children:"Brief Explanation of the Views"}),"\n",(0,i.jsxs)(n.p,{children:["Most of the views are CBV imported from ",(0,i.jsx)(n.em,{children:"rest_framework.generics"}),", and they allow the backend api to do the basic CRUD operations expected, and so they inherit from the ",(0,i.jsx)(n.em,{children:"ListAPIView"}),", ",(0,i.jsx)(n.em,{children:"CreateAPIView"}),", ",(0,i.jsx)(n.em,{children:"RetrieveAPIView"}),", ..., and so on."]}),"\n",(0,i.jsxs)(n.p,{children:["The behavior of some of the views had to be modified to address functionalities such as creation of order and payment, as in this case, for example, both functionalities are implemented in the same view, and so a ",(0,i.jsx)(n.em,{children:"GenericAPIView"})," was the view from which it inherits. Another example of this is the ",(0,i.jsx)(n.em,{children:"UploadCustomerImage"})," View that takes the vinyl template uploaded by the clients and creates a new product based on it."]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Clone the repo:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone <INSERT URL>\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Configure a virtual env and set up the database. See ",(0,i.jsx)(n.a,{href:"https://docs.python-guide.org/dev/virtualenvs/",children:"Link for configuring Virtual Environment"})," and ",(0,i.jsx)(n.a,{href:"https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04",children:"Link for Database setup"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Configure the environment variables."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Copy the content of the example env file that is inside the truck_signs_designs folder into a .env file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd truck_signs_designs/settings\r\ncp simple_env_config.env .env\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The new .env file should contain all the environment variables necessary to run all the django app in all the environments. However, the only needed variables for the development environment to run are the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"SECRET_KEY=<secret_key>\r\nDB_NAME=<db_name>\r\nDB_USER=<db_user>\r\nDB_PASSWORD=<dev_db_password>\r\nDB_HOST=<localhost>\r\nDB_PORT=<5432>\r\nSTRIPE_PUBLISHABLE_KEY=<stripe_pub_key>\r\nSTRIPE_SECRET_KEY=<stripe_secret_key>\r\nEMAIL_HOST_USER=<your.email@gmail.com>\r\nEMAIL_HOST_PASSWORD=<your_password>\r\n\r\n# creating a superuser\r\nDJANGO_SUPERUSER_USERNAME=admin\r\nDJANGO_SUPERUSER_EMAIL=admin@example.com\r\nDJANGO_SUPERUSER_PASSWORD=adminpassword\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"For the database, the default configurations should be:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"DB_NAME=trucksigns_db\r\nDB_USER=trucksigns_user\r\nDB_PASSWORD=supertrucksignsuser!\r\nDB_HOST=localhost\r\nDB_PORT=5432\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The SECRET_KEY is the django secret key. To generate a new one see: ",(0,i.jsx)(n.a,{href:"https://stackoverflow.com/questions/41298963/is-there-a-function-for-generating-settings-secret-key-in-django",children:"Stackoverflow Link"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NOTE: not required for exercise"}),(0,i.jsx)("br",{}),"The STRIPE_PUBLISHABLE_KEY and the STRIPE_SECRET_KEY can be obtained from a developer account in ",(0,i.jsx)(n.a,{href:"https://stripe.com/",children:"Stripe"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["To retrieve the keys from a Stripe developer account follow the next instructions:","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Log in into your Stripe developer account (stripe.com) or create a new one (stripe.com > Sign Up). This should redirect to the account's Dashboard."}),"\n",(0,i.jsx)(n.li,{children:"Go to Developer > API Keys, and copy both the Publishable Key and the Secret Key."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The EMAIL_HOST_USER and the EMAIL_HOST_PASSWORD are the credentials to send emails from the website when a client makes a purchase. This is currently disable, but the code to activate this can be found in views.py in the create order view as comments. Therefore, any valid email and password will work."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Run the migrations and then the app:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python manage.py migrate\r\npython manage.py runserver\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Congratulations =) !!! The App should be running in ",(0,i.jsx)(n.a,{href:"http://localhost:8000",children:"localhost:8000"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"(Optional step) To create a super user run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python manage.py createsuperuser\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.a,{href:"https://github.com/PascalNehlsen/truck_signs_api/blob/main/Dockerfile",children:"Dockerfile"})," on root Level"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create Docker image"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker build -t <image-name>:<tag-name> .\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-t"}),': Stands for "tag." Used to name and optionally tag the image in the format ',(0,i.jsx)(n.code,{children:"<image-name>:<tag-name>"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"."}),": Represents the current directory, which contains the Dockerfile and the context for building the image."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create a network"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker network create <network-name>\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<network-name>"}),": The name you want to assign to the new network. This name must be unique within the Docker environment."]}),"\n",(0,i.jsx)(n.li,{children:"The database and the Docker Container can communicate in this network."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Start the postgres container"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker run --name <docker-name> \\\r\n   --network <networkname> \\\r\n   -e POSTGRES_PASSWORD=<postgres-password> \\\r\n   -e POSTGRES_USER=<postgres-user> \\\r\n   -e POSTGRES_DB=<postgres-db-name> \\\r\n   -v <postgres-volume>:/var/lib/postgresql/data \\ #store the postgres data in a volume\r\n   -d postgres\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<network-name>"}),": The network you created before."]}),"\n",(0,i.jsx)(n.li,{children:"Postgres Data: The login data you created before."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Start the Docker container"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker run --name <container-name> \\\r\n   --network <network-name> \\\r\n   -p 8020:8000 \\\r\n   -v <media-volume>:/app/media \\\r\n   -v <static-volume>:/app/static \\\r\n   --restart on-failure \\\r\n   <image-name>:<image-tag>\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<network-name>"}),": The same network as your postgres container"]}),"\n",(0,i.jsx)(n.li,{children:"This container listens on Port 8020"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--restart on-failure"}),": Configures the container to restart automatically due to an error."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<image-name>:<image-tag>"}),": Your image name due the build process."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NOTE:"})," To create Truck vinyls with Truck logos in them, first create the ",(0,i.jsx)(n.strong,{children:"Category"})," Truck Sign, and then the ",(0,i.jsx)(n.strong,{children:"Product"})," (can have any name). This is to make sure the frontend retrieves the Truck vinyls for display in the Product Grid as it only fetches the products of the category Truck Sign."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)("a",{name:"screenshots"}),"\n",(0,i.jsx)(n.h2,{id:"screenshots-of-the-django-backend-admin-panel",children:"Screenshots of the Django Backend Admin Panel"}),"\n",(0,i.jsx)(n.h3,{id:"mobile-view",children:"Mobile View"}),"\n",(0,i.jsxs)("div",{align:"center",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{alt:"alt text",src:s(5374).A+"",width:"246",height:"500"})," ",(0,i.jsx)(n.img,{alt:"alt text",src:s(4545).A+"",width:"246",height:"500"})," ",(0,i.jsx)(n.img,{alt:"alt text",src:s(3416).A+"",width:"246",height:"500"})]}),(0,i.jsx)(n.hr,{})]}),"\n",(0,i.jsx)(n.h3,{id:"desktop-view",children:"Desktop View"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alt text",src:s(9739).A+"",width:"2531",height:"1215"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alt text",src:s(204).A+"",width:"2557",height:"1221"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alt text",src:s(7717).A+"",width:"2548",height:"1208"})}),"\n",(0,i.jsx)("a",{name:"useful_links"}),"\n",(0,i.jsx)(n.h2,{id:"useful-links",children:"Useful Links"}),"\n",(0,i.jsx)(n.h3,{id:"postgresql-database",children:"Postgresql Database"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Setup Database: ",(0,i.jsx)(n.a,{href:"https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04",children:"Digital Ocean Link for Django Deployment on VPS"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"docker",children:"Docker"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.docker.com/",children:"Docker Oficial Documentation"})}),"\n",(0,i.jsxs)(n.li,{children:["Dockerizing Django, PostgreSQL, guinicorn, and Nginx:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Github repo of sunilale0: ",(0,i.jsx)(n.a,{href:"https://github.com/sunilale0/django-postgresql-gunicorn-nginx-dockerized/blob/master/README.md#nginx",children:"Link"})]}),"\n",(0,i.jsxs)(n.li,{children:["Michael Herman article on testdriven.io: ",(0,i.jsx)(n.a,{href:"https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/",children:"Link"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"django-and-drf",children:"Django and DRF"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.djangoproject.com/en/4.0/",children:"Django Official Documentation"})}),"\n",(0,i.jsxs)(n.li,{children:["Generate a new secret key: ",(0,i.jsx)(n.a,{href:"https://stackoverflow.com/questions/41298963/is-there-a-function-for-generating-settings-secret-key-in-django",children:"Stackoverflow Link"})]}),"\n",(0,i.jsxs)(n.li,{children:["Modify the Django Admin:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Small modifications (add searching, columns, ...): ",(0,i.jsx)(n.a,{href:"https://realpython.com/customize-django-admin-python/",children:"Link"})]}),"\n",(0,i.jsxs)(n.li,{children:["Modify Templates and css: ",(0,i.jsx)(n.a,{href:"https://medium.com/@brianmayrose/django-step-9-180d04a4152c",children:"Link from Medium"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.django-rest-framework.org/",children:"Django Rest Framework Official Documentation"})}),"\n",(0,i.jsxs)(n.li,{children:["More about Nested Serializers: ",(0,i.jsx)(n.a,{href:"https://stackoverflow.com/questions/51182823/django-rest-framework-nested-serializers",children:"Stackoverflow Link"})]}),"\n",(0,i.jsxs)(n.li,{children:["More about GenericViews: ",(0,i.jsx)(n.a,{href:"https://testdriven.io/blog/drf-views-part-2/",children:"Testdriver.io Link"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"miscellaneous",children:"Miscellaneous"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Create Virual Environment with Virtualenv and Virtualenvwrapper: ",(0,i.jsx)(n.a,{href:"https://docs.python-guide.org/dev/virtualenvs/",children:"Link"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.stackhawk.com/blog/django-cors-guide/",children:"Configure CORS"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://cloudinary.com/documentation/django_integration",children:"Setup Django with Cloudinary"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"contact",children:"Contact"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pascal Nehlsen - ",(0,i.jsx)(n.a,{href:"https://www.linkedin.com/in/pascal-nehlsen",children:"LinkedIn"})," - ",(0,i.jsx)(n.a,{href:"mailto:mail@pascal-nehlsen.de",children:"mail@pascal-nehlsen.de"})]}),"\n",(0,i.jsxs)(n.li,{children:["Project Link: ",(0,i.jsx)(n.a,{href:"https://github.com/PascalNehlsen/truck_signs_api",children:"https://github.com/PascalNehlsen/truck_signs_api"})]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9739:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Admin_Panel_View-203c5e520035c00306c542bc81342633.png"},204:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Admin_Panel_View_2-7a3ac2c2d90b77aec1d193947e63fda5.png"},7717:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Admin_Panel_View_3-eb07e17dadb08a2e4c9041aef6c14ba7.png"},5374:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Admin_Panel_View_Mobile-adc30c264f928b51063aced10fa1a36c.png"},4545:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Admin_Panel_View_Mobile_2-7fddee3f11d316b851e9a517299f9d2d.png"},3416:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Admin_Panel_View_Mobile_3-30356bcb28d60f80733df021a56b9f5c.png"},6389:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Truck_Signs_logo-dfd1094a9db92da18f347bffa43b7bde.png"},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);